/* ---------------------------------------------
*   module
--------------------------------------------- */
.keyvisual {
  position: relative;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  
  @include pc {
    font-size: 50px;
  }

  @include sp {
    font-size: pxtovw(100,'sp');
    text-align: center;
  }

  &__title {
    position: relative;
    color: #fff;
    font-weight: bold;
  }
}

#canvas-container {
  position: absolute;
  width: 100%;
  height: 100%;
}

.section-statement {
  font-family: "見出ゴMB31 JIS2004", "Midashi Go MB31 JIS2004";
  color: #fff;
  
  @include pc {
    padding: 300px 0;
  }

  @include sp {
    padding: pxtovw(60,'sp') 0;
  }

  &__inner {
    margin: 0 auto;
    
    @include pc {
      width: 1000px;
    }

    @include sp {
      width: pxtovw(620,'sp');
    }
  }

  &__desc {
    line-height: 1.6;
    
    @include pc {
      font-size: 55px;
    }

    @include sp {
      font-size: pxtovw(60,'sp');
    }

    &:nth-child(n+2) {
      margin-top: 100px;
    }
  }
}

.section-irritate {
  display: flex;
  align-content: center;
  justify-content: center;
  flex-wrap: wrap;
  
  @include pc {
    height: 150vh;
    font-size: 60px;
  }

  @include sp {
    height: 120vh;
    font-size: pxtovw(50,'sp');
  }

  &__text {
    font-weight: bold;
  }
}

.section-result {
  position: relative;
  height: 200vh;

  &__square {
    box-sizing: border-box;
    color: #fff;
    margin: 0 auto;
    
    @include pc {
      border: 15px solid #fff;
      width: 500px;
      padding: 40px;
    }

    @include sp {
      border: pxtovw(15,'sp') solid #fff;
      width: pxtovw(620,'sp');
      padding: pxtovw(40,'sp');
    }
  }

  &__hx {
    font-weight: bold;
    
    @include pc {
      font-size: 50px;
    }

    @include sp {
      font-size: pxtovw(70,'sp');
    }
  }

  &__rgb {
    display: flex;
    flex-wrap: wrap;
    font-weight: bold;
    
    @include pc {
      font-size: 40px;
      margin-top: 200px;
    }

    @include sp {
      font-size: pxtovw(50,'sp');
      margin-top: pxtovw(200,'sp');
    }
  }

  &__rgb-unit {
    width: 33%;
  }

  &__count {
    font-weight: bold;
    
    @include pc {
      font-size: 30px;
    }

    @include sp {
      font-size: pxtovw(40,'sp');
    }
  }
}

.section-vote {
  position: absolute;
  width: 100%;
  bottom: 0;
  left: 0;

  &__title {
    color: #fff;
    top: 30px;
    position: absolute;
    left: 0;
    right: 0;
    margin: auto;
    text-align: center;
    z-index: 2;
    font-weight: bold;
    
    @include pc {
      font-size: 70px;
    }

    @include sp {
      font-size: pxtovw(40,'sp');
    }
  }

  .pcr-button {
    height: 100vh;
    width: 100vw;
  }
}

.pcr-app {
  
  @include pc {
    left: 20vw!important;
    top: 34vh!important;
  }
}

.pcr-app[data-theme=classic] {
  
  @include pc {
    width: 46.5em!important;
    height: 28em!important;
  }
}

.pcr-color-palette {
  
  @include pc {
    height: 23em!important;
  }
}

.thankyou {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #000;
  color: #fff;
  transform: translateX(100%);
  z-index: 9999;
  overflow: hidden;

  &__inner {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    transform: translateX(-100%);
  }

  &__title {
    font-size: 60px;
    font-weight: bold;
    text-align: center;
  }
  
  &__bar {
    position: relative;
    height: 3px;
    overflow: hidden;
    margin-top: 70px;
    
    @include pc {
      width: 500px;
    }

    &:before {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: #fff;
      animation-delay: 0.4s;
      animation-duration: .8s;
      animation-name: lineloading;
      animation-iteration-count: infinite;
      animation-timing-function: cubic-bezier(0.46, 0.1, 0.29, 1);
    }
  }
}

@keyframes lineloading {
  from {
      transform: translate3d(-100%, 0, 0)
  }

  30% {
      transform: translate3d(0%, 0, 0)
  }

  to {
      transform: translate3d(100%, 0, 0)
  }
}